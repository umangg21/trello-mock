{"version":3,"sources":["images/background.jpg","component/Style.ts","component/AddItem.tsx","component/CardItemView.tsx","component/ListItem.tsx","component/ListView.tsx","component/Home.tsx","index.tsx"],"names":["module","exports","__webpack_require__","p","styles","listDescription","fontSize","fontWeight","listItem","backgroundColor","width","height","margin","border","listAddItem","concat","color","listAddListItem","listAddButton","padding","dialogHeader","dialogContent","dialogActions","minHeight","dialogButton","itemPB","buttonIcon","paddingRight","editIconP","AddItem","_React$Component","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleChange","event","newval","target","value","setState","newItemDescription","saveItem","onAddItem","state","deletItem","isEditView","editValue","inherits","createClass","key","headerPrefix","react_default","a","createElement","Fragment","index_es","open","openDialog","fullWidth","maxWidth","style","className","title","onClick","closeDialog","aria-label","Close_default","autoFocus","required","id","type","label","onChange","variant","size","Delete_default","disabled","Save_default","React","Component","CardItemView","openAddItemDailog","onSaveCard","newDescription","cardItem","onDeleteCard","component","description","component_AddItem","ListItem","openEditList","addNewCard","cardId","deleteListItem","onDeleteList","onSaveListItem","getList","cards","map","card","component_CardItemView","cardList","Edit_default","Add_default","ListView","addNewList","onSaveListData","onNewBoard","getListItems","List","component_ListItem","listItems","Refresh_default","Home","listId","cardTitle","console","log","todoWork","list","listItemIndex","findIndex","item","length","push","objectSpread","toggle","listTitle","newListItem","newDesription","cardItemIndex","ListId","splice","element","document","file","Blob","getData","href","URL","createObjectURL","download","click","FinalString","listIndex","forEach","cardIndex","toDoWorkData","require","minWidth","overflow","backgroundImage","Background","position","top","left","component_ListView","ReactDOM","render","component_Home","getElementById"],"mappings":"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","file":"static/js/main.53754fd9.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/background.ffc43764.jpg\";","\r\nexport const styles = { \r\n    listDescription: {\r\n        fontSize: 'larger',\r\n        fontWeight: 500,\r\n    },\r\n\r\n    listItem:{\r\n        backgroundColor: `lightgray`,\r\n        width: `15rem`,\r\n        height: `fit-content`,\r\n        margin: `10px`,\r\n        border:`10px`\r\n    },\r\n\r\n    listAddItem:{\r\n        backgroundColor: `rgba(${10},${0},${0},${0.2})`,\r\n        color: `white`,\r\n        height: `fit-content`,\r\n        margin: `10px`,\r\n    },\r\n\r\n    listAddListItem:{\r\n        backgroundColor: `rgba(${10},${0},${0},${0.2})`,\r\n        color: `white`,\r\n        width: `12rem`,\r\n        height: `fit-content`,\r\n        margin: `10px`,\r\n        border:`10px`,\r\n    },\r\n\r\n    listAddButton:{\r\n        padding: `10px`\r\n    },\r\n\r\n    dialogHeader: {\r\n        backgroundColor: `#f5f5f5`,\r\n    },\r\n    \r\n    dialogContent: {\r\n        padding: `20px`,\r\n        backgroundColor: `#EEEEEE`,\r\n    },\r\n\r\n    dialogActions: {\r\n        minHeight: `50px`,\r\n        margin: `0px`,\r\n        backgroundColor: `#f5f5f5`,\r\n    },\r\n    \r\n    dialogButton: {\r\n        minHeight: `40px`,\r\n        margin: `10px`\r\n    },\r\n\r\n    itemPB: {\r\n        margin: `10px`,\r\n        border:`10px`\r\n    },\r\n\r\n    buttonIcon:{\r\n        paddingRight: `10px`\r\n    },\r\n\r\n    editIconP:{\r\n        padding: `5px`,\r\n        color: `gray`\r\n    }\r\n\r\n}","import React from 'react';\r\nimport { Dialog, DialogTitle, DialogContent, TextField,  Button, IconButton } from '@material-ui/core';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport { styles } from './Style';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\n\r\n\r\ninterface IAddItemProps {\r\n    title: string;\r\n    onAddItem: Function;\r\n    openDialog: boolean;\r\n    closeDialog: any;\r\n    isEditView?: boolean;\r\n    editValue?: any;\r\n    deletItem?: Function;\r\n}\r\n\r\ninterface IAddItemStates {\r\n    newItemDescription?: string\r\n}\r\n\r\n\r\nexport class AddItem extends React.Component<IAddItemProps, IAddItemStates> {\r\n\r\n    constructor(props: any) {\r\n        super(props)\r\n        this.state = { newItemDescription: this.props.isEditView ? this.props.editValue : \"\" }\r\n\r\n    }\r\n\r\n    handleChange = (event: any) => {\r\n        let newval = event.target.value;\r\n        this.setState({ newItemDescription: newval })\r\n    }\r\n\r\n    saveItem = () => {\r\n        this.props.onAddItem(this.state.newItemDescription)\r\n    }\r\n\r\n    deletItem = () => {\r\n        if (this.props.deletItem) {\r\n            this.props.deletItem()\r\n        }\r\n    }\r\n\r\n    render() {\r\n\r\n        let headerPrefix = this.props.isEditView ? \"Edit \" : \"Add New \"\r\n        return (\r\n\r\n\r\n            <React.Fragment>\r\n                <Dialog open={this.props.openDialog}\r\n                    fullWidth={true}\r\n                    maxWidth='sm'>\r\n                    <div>\r\n                        <DialogTitle style={styles.dialogHeader} >\r\n                            <div className=\"layout-row layout-align-space-between-center\">\r\n                                <span>{headerPrefix + this.props.title}</span>\r\n                                <IconButton color=\"inherit\"\r\n                                    onClick={this.props.closeDialog}\r\n                                    aria-label=\"Close\">\r\n                                    <CloseIcon />\r\n                                </IconButton>\r\n                            </div>\r\n                        </DialogTitle>\r\n                        <DialogContent style={styles.dialogContent}>\r\n                            <TextField\r\n                                autoFocus\r\n                                required\r\n                                margin=\"dense\"\r\n                                id={this.props.title + \"Name\"}\r\n                                type=\"text\"\r\n                                value={this.state.newItemDescription}\r\n                                label={this.props.title + \" Name\"}\r\n                                fullWidth\r\n                                className=\"flex-70\"\r\n                                onChange={this.handleChange}\r\n                            />\r\n                        </DialogContent>\r\n                        <div style={styles.dialogActions} className=\"layout-row layout-align-space-between-center\">\r\n                            <div>\r\n                                {this.props.isEditView && <Button\r\n                                    variant=\"contained\"\r\n                                    color=\"default\"\r\n                                    size=\"small\"\r\n                                    style={styles.dialogButton}\r\n                                    onClick={this.deletItem}>\r\n                                    <DeleteIcon style={styles.buttonIcon} />\r\n                                    {\"Delete \" + this.props.title}\r\n                                </Button>}\r\n                            </div>\r\n                            <div className=\"layout-row layout-align-end-center\">\r\n                                <Button\r\n                                    variant=\"contained\"\r\n                                    color=\"default\"\r\n                                    size=\"small\"\r\n                                    style={styles.dialogButton}\r\n                                    onClick={this.props.closeDialog}>\r\n                                    Cancel\r\n                                </Button>\r\n\r\n                                <Button\r\n                                    variant=\"contained\"\r\n                                    color=\"default\"\r\n                                    size=\"small\"\r\n                                    style={styles.dialogButton}\r\n                                    disabled={!this.state.newItemDescription}\r\n                                    onClick={this.saveItem}>\r\n                                    <SaveIcon style={styles.buttonIcon} />\r\n                                    Save\r\n                                </Button>\r\n                            </div>\r\n                        </div>\r\n\r\n                    </div>\r\n                </Dialog>\r\n\r\n            </React.Fragment >\r\n        )\r\n    }\r\n}\r\n\r\nexport default AddItem;","import React from 'react';\r\nimport { Card, CardActionArea, Typography } from '@material-ui/core';\r\nimport { CardItem } from '../contract/contract';\r\nimport { styles } from './Style';\r\nimport AddItem from './AddItem';\r\n\r\ninterface ICardItemViewProps {\r\n    cardItem: CardItem;\r\n    onSaveCard: Function;\r\n    onDeleteCard: Function;\r\n}\r\n\r\ninterface ICardItemViewStates {\r\n    openAddItemDailog: boolean;\r\n}\r\n\r\nexport class CardItemView extends React.Component<ICardItemViewProps, ICardItemViewStates> {\r\n\r\n    constructor(props: any) {\r\n        super(props)\r\n        this.state = {openAddItemDailog : false}\r\n    }\r\n\r\n    openDialog = () => {\r\n        this.setState({ openAddItemDailog: true })\r\n    }\r\n\r\n    closeDialog = () => {\r\n        this.setState({ openAddItemDailog: false })\r\n    }\r\n\r\n    onSaveCard = (newDescription: string) =>{\r\n        this.props.onSaveCard(this.props.cardItem.id, newDescription)\r\n        this.closeDialog()\r\n    }\r\n\r\n    onDeleteCard = () =>{\r\n        this.props.onDeleteCard(this.props.cardItem.id)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                <Card style={styles.itemPB} onClick={this.openDialog}>\r\n                    <CardActionArea >\r\n                        <Typography component=\"p\" style={styles.itemPB}>\r\n                            {this.props.cardItem.description}\r\n                        </Typography>\r\n                    </CardActionArea>\r\n                </Card>\r\n\r\n                {/* Edit or Delete a card*/}\r\n\r\n                {this.state.openAddItemDailog && \r\n                <AddItem\r\n                        title=\"Card\"\r\n                        openDialog={this.state.openAddItemDailog}\r\n                        closeDialog={this.closeDialog}\r\n                        onAddItem={this.onSaveCard}\r\n                        isEditView= {true}\r\n                        editValue={this.props.cardItem.description}\r\n                        deletItem= {this.onDeleteCard}\r\n                />}\r\n\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default CardItemView;","import React from 'react';\r\nimport { Card, CardActionArea, Typography, IconButton } from '@material-ui/core';\r\n\r\nimport { List } from '../contract/contract';\r\nimport CardItemView from './CardItemView';\r\nimport { styles } from './Style';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport AddItem from './AddItem';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\n\r\ninterface IListItemProps {\r\n    ListItem: List;\r\n    addNewCard: Function;\r\n    onSaveCard: Function;\r\n    onDeleteCard: Function;\r\n    onDeleteList: Function;\r\n    onSaveListItem: Function;\r\n}\r\n\r\ninterface IListItemStates {\r\n    openAddItemDailog: boolean;\r\n    openEditList: boolean;\r\n}\r\n\r\nexport class ListItem extends React.Component<IListItemProps, IListItemStates> {\r\n\r\n    constructor(props: any) {\r\n        super(props)\r\n        this.state = { openAddItemDailog: false, openEditList: false }\r\n\r\n    }\r\n\r\n    openDialog = () => {\r\n        this.setState({ openAddItemDailog: true })\r\n    }\r\n\r\n    closeDialog = () => {\r\n        this.setState({ openAddItemDailog: false, openEditList: false })\r\n    }\r\n\r\n    addNewCard = (title: string) => {\r\n        this.props.addNewCard(this.props.ListItem.id, title)\r\n        this.closeDialog()\r\n    }\r\n\r\n    onSaveCard = (cardId: number, newDescription: string) => {\r\n        this.props.onSaveCard(this.props.ListItem.id, cardId, newDescription)\r\n    }\r\n\r\n    onDeleteCard = (cardId: number) => {\r\n        this.props.onDeleteCard(cardId, this.props.ListItem.id)\r\n    }\r\n\r\n    deleteListItem = () => {\r\n        this.props.onDeleteList(this.props.ListItem.id)\r\n    }\r\n\r\n    openEditList = () => {\r\n        this.setState({ openEditList: true })\r\n    }\r\n\r\n    onSaveListItem = (listDescription: number) => {\r\n        this.props.onSaveListItem(listDescription, this.props.ListItem.id)\r\n        this.closeDialog()\r\n    }\r\n\r\n    getList = () => {\r\n        return this.props.ListItem.cards.map(card =>\r\n            (<CardItemView\r\n                cardItem={card}\r\n                key={card.id}\r\n                onSaveCard={this.onSaveCard}\r\n                onDeleteCard={this.onDeleteCard}\r\n            />))\r\n    }\r\n\r\n    render() {\r\n\r\n        let cardList = this.getList()\r\n\r\n        return (\r\n            <React.Fragment>\r\n                <Card style={styles.listItem}>\r\n                    <div style={styles.itemPB} className=\"layout-row layout-align-space-between-center\">\r\n                        <span style={styles.listDescription}>{this.props.ListItem.description}</span>\r\n                        <IconButton color=\"inherit\"\r\n                            style={styles.editIconP}\r\n                            onClick={this.openEditList}\r\n                            aria-label=\"Close\">\r\n                            <EditIcon />\r\n                        </IconButton>\r\n                    </div>\r\n                    <div>\r\n                        {cardList}\r\n                    </div>\r\n\r\n                    <Card style={styles.listAddItem} onClick={this.openDialog}>\r\n                        <CardActionArea style={styles.listAddButton}>\r\n                            <div className=\"layout-row layout-align-space-around-center\">\r\n                                <AddIcon />\r\n                                <span color=\"white\">Add New Card</span>\r\n                            </div>\r\n                        </CardActionArea>\r\n                    </Card>\r\n\r\n                    {/* Add a new Card in a List */}\r\n\r\n                    {this.state.openAddItemDailog &&\r\n                        <AddItem\r\n                            title=\"Card\"\r\n                            openDialog={this.state.openAddItemDailog}\r\n                            closeDialog={this.closeDialog}\r\n                            onAddItem={this.addNewCard}\r\n                        />}\r\n\r\n                    {/* Edit List Item*/}\r\n\r\n                    {this.state.openEditList &&\r\n                        <AddItem\r\n                            title=\"List\"\r\n                            openDialog={this.state.openEditList}\r\n                            closeDialog={this.closeDialog}\r\n                            onAddItem={this.onSaveListItem}\r\n                            isEditView={true}\r\n                            editValue={this.props.ListItem.description}\r\n                            deletItem={this.deleteListItem}\r\n                        />\r\n                    }\r\n\r\n                </Card>\r\n\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ListItem;","import React from 'react';\r\nimport { Card, CardActionArea, Typography, IconButton } from '@material-ui/core';\r\nimport { List } from '../contract/contract';\r\nimport ListItem from './ListItem';\r\nimport { styles } from './Style';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport AddItem from './AddItem';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport RefreshIcon from '@material-ui/icons/Refresh';\r\n\r\n\r\ninterface IListViewProps {\r\n    List: List[];\r\n    addNewCard: Function;\r\n    addNewList: Function;\r\n    onSaveCard: Function;\r\n    onDeleteCard: Function;\r\n    onDeleteList: Function;\r\n    onSaveListItem: Function;\r\n    onSaveListData: Function;\r\n    onNewBoard: Function;\r\n}\r\n\r\ninterface IListViewStates {\r\n    openAddItemDailog: boolean\r\n}\r\n\r\n\r\nexport class ListView extends React.Component<IListViewProps, IListViewStates> {\r\n\r\n    constructor(props: any) {\r\n        super(props)\r\n        this.state = { openAddItemDailog: false }\r\n    }\r\n\r\n    openDialog = () => {\r\n        this.setState({ openAddItemDailog: true })\r\n    }\r\n\r\n    closeDialog = () => {\r\n        this.setState({ openAddItemDailog: false })\r\n    }\r\n\r\n    addNewList = (title: string) => {\r\n        this.props.addNewList(title)\r\n        this.closeDialog()\r\n    }\r\n\r\n    onSaveListData = () => {\r\n        this.props.onSaveListData()\r\n    }\r\n\r\n    onNewBoard =() =>{\r\n        this.props.onNewBoard()\r\n    }\r\n\r\n    getListItems = () => {\r\n        return this.props.List.map(listItem =>\r\n            (<ListItem\r\n                ListItem={listItem}\r\n                key={listItem.id}\r\n                addNewCard={this.props.addNewCard}\r\n                onSaveCard={this.props.onSaveCard}\r\n                onDeleteCard={this.props.onDeleteCard}\r\n                onDeleteList={this.props.onDeleteList}\r\n                onSaveListItem={this.props.onSaveListItem} />))\r\n    }\r\n\r\n    render() {\r\n\r\n        let listItems = this.getListItems()\r\n        return (\r\n            <React.Fragment>\r\n                <div className=\"layout-row layout-align-center\" style={styles.itemPB}>\r\n                    {listItems}\r\n\r\n                    <div>\r\n                        <Card style={styles.listAddListItem} onClick={this.openDialog}>\r\n                            <CardActionArea style={styles.listAddButton}>\r\n                                <div className=\"layout-row layout-align-space-around-center\">\r\n                                    <AddIcon />\r\n                                    <span color=\"white\">Add New List</span>\r\n                                </div>\r\n                            </CardActionArea>\r\n                        </Card>\r\n\r\n                        <Card style={styles.listAddListItem} onClick={this.onSaveListData}>\r\n                            <CardActionArea style={styles.listAddButton}>\r\n                                <div className=\"layout-row layout-align-space-around-center\">\r\n                                    <SaveIcon />\r\n                                    <span color=\"white\">Save Board</span>\r\n                                </div>\r\n                            </CardActionArea>\r\n                        </Card>\r\n\r\n                        <Card style={styles.listAddListItem} onClick={this.onNewBoard}>\r\n                            <CardActionArea style={styles.listAddButton}>\r\n                                <div className=\"layout-row layout-align-space-around-center\">\r\n                                    <RefreshIcon />\r\n                                    <span color=\"white\">New Board</span>\r\n                                </div>\r\n                            </CardActionArea>\r\n                        </Card>\r\n\r\n                    </div>\r\n\r\n                    {/* Add a new List */}\r\n\r\n                    {this.state.openAddItemDailog &&\r\n                        <AddItem\r\n                            title=\"List\"\r\n                            openDialog={this.state.openAddItemDailog}\r\n                            closeDialog={this.closeDialog}\r\n                            onAddItem={this.addNewList}\r\n                        />}\r\n                </div>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ListView;","import React from 'react';\r\nimport { ToDoWork, List, CardItem } from '../contract/contract';\r\nimport Background from '../images/background.jpg';\r\nimport ListView from './ListView';\r\n\r\n\r\nexport interface IHomeProps {\r\n}\r\n\r\nexport interface IHomeState {\r\n    todoWork: ToDoWork;\r\n    toggle: boolean;\r\n}\r\n\r\nfunction getHomeStyle() {\r\n    return {\r\n        minHeight: \"100%\",\r\n        minWidth: `100%`,\r\n        width: `100%`,\r\n        overflow: `auto`,\r\n        backgroundColor: `#EEEEEE`,\r\n        backgroundImage: `url(${Background})`,\r\n        position: \"fixed\" as \"fixed\",\r\n        top: 0,\r\n        left: 0,\r\n    }\r\n}\r\n\r\nexport class Home extends React.Component<IHomeProps, IHomeState> {\r\n    constructor(props: any) {\r\n        super(props);\r\n\r\n        let toDoWorkData = require('../contract/toDoData.json')\r\n        this.state = { todoWork: toDoWorkData, toggle: true };\r\n\r\n    }\r\n\r\n    addNewCard = (listId: number, cardTitle: string) => {\r\n        console.log(listId, cardTitle)\r\n        let listItems = this.state.todoWork.list\r\n        console.log(listItems)\r\n        let listItemIndex = listItems.findIndex(item => item.id == listId)\r\n        let cardList = listItems[listItemIndex].cards\r\n        console.log(cardList)\r\n        const NoOfCards = cardList.length\r\n        let cardItem: CardItem = {\r\n            id: NoOfCards + 1,\r\n            description: cardTitle\r\n        }\r\n        console.log(cardItem)\r\n        cardList.push(cardItem)\r\n        listItems[listItemIndex].cards = cardList\r\n\r\n        this.setState({ todoWork: { ...this.state.todoWork, list: listItems }, toggle: !this.state.toggle })\r\n    }\r\n\r\n    addNewList = (listTitle: string) => {\r\n        let listItems = this.state.todoWork.list\r\n        const NoOfList = listItems.length\r\n        let newListItem: List = {\r\n            id: NoOfList + 1,\r\n            description: listTitle,\r\n            cards: []\r\n        }\r\n        listItems.push(newListItem)\r\n\r\n        this.setState({ todoWork: { ...this.state.todoWork, list: listItems }, toggle: !this.state.toggle })\r\n    }\r\n\r\n    onSaveCard = (listId: number, cardId: number, newDesription: string) => {\r\n        let listItems = this.state.todoWork.list\r\n        let listItemIndex = listItems.findIndex(item => item.id == listId)\r\n        let cardList = listItems[listItemIndex].cards\r\n        let cardItemIndex = cardList.findIndex(item => item.id == cardId)\r\n\r\n        listItems[listItemIndex].cards[cardItemIndex].description = newDesription\r\n        this.setState({ todoWork: { ...this.state.todoWork, list: listItems }, toggle: !this.state.toggle })\r\n    }\r\n\r\n    onDeleteCard = (cardId: number, ListId: number) => {\r\n        let listItems = this.state.todoWork.list\r\n        let listItemIndex = listItems.findIndex(item => item.id == ListId)\r\n        let cardList = listItems[listItemIndex].cards\r\n        let cardItemIndex = cardList.findIndex(item => item.id == cardId)\r\n\r\n        if (cardItemIndex >= 0) {\r\n            listItems[listItemIndex].cards.splice(cardItemIndex, 1)\r\n        }\r\n        this.setState({ todoWork: { ...this.state.todoWork, list: listItems }, toggle: !this.state.toggle })\r\n    }\r\n\r\n    onDeleteList = (listId: number) => {\r\n        let listItems = this.state.todoWork.list\r\n        let listItemIndex = listItems.findIndex(item => item.id == listId)\r\n\r\n        if (listItemIndex >= 0) {\r\n            listItems.splice(listItemIndex, 1)\r\n        }\r\n        this.setState({ todoWork: { ...this.state.todoWork, list: listItems }, toggle: !this.state.toggle })\r\n    }\r\n\r\n    onNewBoard = () =>{\r\n        let listItems = this.state.todoWork.list\r\n        listItems.splice(0)\r\n        this.setState({ todoWork: { ...this.state.todoWork, list: listItems }, toggle: !this.state.toggle })    \r\n    }\r\n\r\n    onSaveListItem = (listDescription: string, listId: number) => {\r\n        let listItems = this.state.todoWork.list\r\n        let listItemIndex = listItems.findIndex(item => item.id == listId)\r\n        listItems[listItemIndex].description = listDescription;\r\n        this.setState({ todoWork: { ...this.state.todoWork, list: listItems }, toggle: !this.state.toggle })\r\n    }\r\n\r\n    onSaveListData = () => {\r\n        var element = document.createElement(\"a\");\r\n        var file = new Blob([this.getData()], {type: 'text/plain'});\r\n        element.href = URL.createObjectURL(file);\r\n        element.download = \"MOM.txt\";\r\n        element.click();\r\n    }\r\n\r\n    getData=() =>{\r\n        var FinalString =\"\"\r\n        var listIndex = 1\r\n        this.state.todoWork.list.forEach( list=>{\r\n            FinalString += `${listIndex}. ${list.description} \\r\\n`\r\n            var cardIndex = 1\r\n            list.cards.forEach(card => {\r\n                FinalString += `    ${cardIndex}. ${card.description} \\r\\n`\r\n                cardIndex+=1\r\n            });\r\n            FinalString += `\\r\\n`\r\n            listIndex +=1\r\n        })\r\n\r\n        return FinalString\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                <div className=\"layout-row flex-100\" style={getHomeStyle()}>\r\n                    <ListView\r\n                        List={this.state.todoWork.list}\r\n                        addNewCard={this.addNewCard}\r\n                        addNewList={this.addNewList}\r\n                        onSaveCard={this.onSaveCard}\r\n                        onDeleteCard={this.onDeleteCard}\r\n                        onDeleteList={this.onDeleteList}\r\n                        onSaveListItem={this.onSaveListItem}\r\n                        onSaveListData={this.onSaveListData}\r\n                        onNewBoard={this.onNewBoard}\r\n                    />\r\n                </div>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default Home;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Home from './component/Home';\n\nReactDOM.render(<Home />, document.getElementById('root'));\n"],"sourceRoot":""}