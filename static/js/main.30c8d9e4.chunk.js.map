{"version":3,"sources":["images/background.jpg","component/Style.ts","component/AddItem.tsx","component/CardItemView.tsx","component/ListItem.tsx","component/ListView.tsx","component/Home.tsx","index.tsx"],"names":["module","exports","__webpack_require__","p","styles","listDescription","fontSize","fontWeight","listItem","backgroundColor","width","height","margin","border","listAddItem","concat","color","listAddListItem","listAddButton","padding","dialogHeader","dialogContent","dialogActions","minHeight","dialogButton","itemPB","AddItem","_React$Component","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleChange","event","newval","target","value","setState","newItemDescription","saveItem","onAddItem","state","isEditView","editValue","inherits","createClass","key","headerPrefix","react_default","a","createElement","Fragment","index_es","open","openDialog","fullWidth","maxWidth","style","className","title","onClick","closeDialog","aria-label","Close_default","required","id","type","label","onChange","variant","size","disabled","Save_default","React","Component","CardItemView","openAddItemDailog","onSaveCard","newDescription","cardItem","component","description","component_AddItem","ListItem","addNewCard","cardId","getList","cards","map","card","component_CardItemView","cardList","Add_default","ListView","addNewList","getListItems","List","component_ListItem","listItems","Home","listId","cardTitle","console","log","todoWork","list","listItemIndex","findIndex","item","length","push","objectSpread","toggle","listTitle","newListItem","newDesription","cardItemIndex","toDoWorkData","require","minWidth","overflow","backgroundImage","Background","position","top","left","component_ListView","ReactDOM","render","component_Home","document","getElementById"],"mappings":"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","file":"static/js/main.30c8d9e4.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/background.ffc43764.jpg\";","\r\nexport const styles = { \r\n    listDescription: {\r\n        fontSize: 'larger',\r\n        fontWeight: 500,\r\n    },\r\n\r\n    listItem:{\r\n        backgroundColor: `lightgray`,\r\n        width: `15rem`,\r\n        height: `fit-content`,\r\n        margin: `10px`,\r\n        border:`10px`\r\n    },\r\n\r\n    listAddItem:{\r\n        backgroundColor: `rgba(${10},${0},${0},${0.2})`,\r\n        color: `white`,\r\n        height: `fit-content`,\r\n        margin: `10px`,\r\n    },\r\n\r\n    listAddListItem:{\r\n        backgroundColor: `rgba(${10},${0},${0},${0.2})`,\r\n        color: `white`,\r\n        width: `12rem`,\r\n        height: `fit-content`,\r\n        margin: `10px`,\r\n        border:`10px`,\r\n    },\r\n\r\n    listAddButton:{\r\n        padding: `10px`\r\n    },\r\n\r\n    dialogHeader: {\r\n        backgroundColor: `#f5f5f5`,\r\n    },\r\n    \r\n    dialogContent: {\r\n        padding: `20px`,\r\n        backgroundColor: `#EEEEEE`,\r\n    },\r\n\r\n    dialogActions: {\r\n        minHeight: `50px`,\r\n        margin: `0px`,\r\n        backgroundColor: `#f5f5f5`,\r\n    },\r\n    \r\n    dialogButton: {\r\n        minHeight: `40px`,\r\n        margin: `10px`\r\n    },\r\n\r\n    itemPB: {\r\n        margin: `10px`,\r\n        border:`10px`\r\n    },\r\n\r\n}","import React from 'react';\r\nimport { Dialog, DialogTitle, DialogContent, TextField, DialogActions, Button, IconButton } from '@material-ui/core';\r\nimport { CardItem } from '../contract/contract';\r\nimport SaveIcon from '@material-ui/icons/Save';\r\nimport { styles } from './Style';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\n\r\n\r\ninterface IAddItemProps {\r\n    title: string;\r\n    onAddItem: Function;\r\n    openDialog: boolean;\r\n    closeDialog: any;\r\n    isEditView?: boolean;\r\n    editValue?: any;\r\n}\r\n\r\ninterface IAddItemStates {\r\n    newItemDescription?: string\r\n}\r\n\r\n\r\nexport class AddItem extends React.Component<IAddItemProps, IAddItemStates> {\r\n\r\n    constructor(props: any) {\r\n        super(props)\r\n        this.state = { newItemDescription: this.props.isEditView ? this.props.editValue : \"\" }\r\n\r\n    }\r\n\r\n    handleChange = (event: any) => {\r\n        let newval = event.target.value;\r\n        this.setState({ newItemDescription: newval })\r\n    }\r\n\r\n    saveItem = () => {\r\n        this.props.onAddItem(this.state.newItemDescription)\r\n    }\r\n\r\n    render() {\r\n\r\n        let headerPrefix = this.props.isEditView ? \"Edit \" : \"Add New \"\r\n        return (\r\n\r\n\r\n            <React.Fragment>\r\n                <Dialog open={this.props.openDialog}\r\n                    fullWidth={true}\r\n                    maxWidth='sm'>\r\n                    <div>\r\n                        <DialogTitle style={styles.dialogHeader} >\r\n                            <div className=\"layout-row layout-align-space-between-center\">\r\n                                <span>{headerPrefix + this.props.title}</span>\r\n                                <IconButton color=\"inherit\"\r\n                                    onClick={this.props.closeDialog}\r\n                                    aria-label=\"Close\">\r\n                                    <CloseIcon />\r\n                                </IconButton>\r\n                            </div>\r\n                        </DialogTitle>\r\n                        <DialogContent style={styles.dialogContent}>\r\n                            <TextField\r\n                                required\r\n                                margin=\"dense\"\r\n                                id={this.props.title + \"Name\"}\r\n                                type=\"text\"\r\n                                value={this.state.newItemDescription}\r\n                                label={this.props.title + \" Name\"}\r\n                                fullWidth\r\n                                className=\"flex-70\"\r\n                                onChange={this.handleChange}\r\n                            />\r\n                        </DialogContent>\r\n                        <DialogActions style={styles.dialogActions} className=\"layout-row layout-align-space-around-center\">\r\n\r\n                            <Button\r\n                                variant=\"contained\"\r\n                                color=\"default\"\r\n                                size=\"small\"\r\n                                style={styles.dialogButton}\r\n                                onClick={this.props.closeDialog}>\r\n                                Cancel\r\n                                </Button>\r\n\r\n                            <Button\r\n                                variant=\"contained\"\r\n                                color=\"default\"\r\n                                size=\"small\"\r\n                                style={styles.dialogButton}\r\n                                disabled={!this.state.newItemDescription}\r\n                                onClick={this.saveItem}>\r\n                                <SaveIcon />\r\n                                Save\r\n                                </Button>\r\n\r\n                        </DialogActions>\r\n\r\n                    </div>\r\n                </Dialog>\r\n\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default AddItem;","import React from 'react';\r\nimport { Card, CardActionArea, Typography } from '@material-ui/core';\r\nimport { CardItem } from '../contract/contract';\r\nimport { styles } from './Style';\r\nimport AddItem from './AddItem';\r\n\r\ninterface ICardItemViewProps {\r\n    cardItem: CardItem;\r\n    onSaveCard: Function;\r\n}\r\n\r\ninterface ICardItemViewStates {\r\n    openAddItemDailog: boolean;\r\n}\r\n\r\nexport class CardItemView extends React.Component<ICardItemViewProps, ICardItemViewStates> {\r\n\r\n    constructor(props: any) {\r\n        super(props)\r\n        this.state = {openAddItemDailog : false}\r\n    }\r\n\r\n    openDialog = () => {\r\n        this.setState({ openAddItemDailog: true })\r\n    }\r\n\r\n    closeDialog = () => {\r\n        this.setState({ openAddItemDailog: false })\r\n    }\r\n\r\n    onSaveCard = (newDescription: string) =>{\r\n        this.props.onSaveCard(this.props.cardItem.id, newDescription)\r\n        this.closeDialog()\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                <Card style={styles.itemPB} onClick={this.openDialog}>\r\n                    <CardActionArea >\r\n                        <Typography component=\"p\" style={styles.itemPB}>\r\n                            {this.props.cardItem.description}\r\n                        </Typography>\r\n                    </CardActionArea>\r\n                </Card>\r\n\r\n                {this.state.openAddItemDailog && \r\n                <AddItem\r\n                        title=\"Card\"\r\n                        openDialog={this.state.openAddItemDailog}\r\n                        closeDialog={this.closeDialog}\r\n                        onAddItem={this.onSaveCard}\r\n                        isEditView= {true}\r\n                        editValue={this.props.cardItem.description}\r\n                />}\r\n\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default CardItemView;","import React from 'react';\r\nimport { Card, CardActionArea, Typography, IconButton } from '@material-ui/core';\r\n\r\nimport { List } from '../contract/contract';\r\nimport CardItemView from './CardItemView';\r\nimport { styles } from './Style';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport AddItem from './AddItem';\r\n\r\ninterface IListItemProps {\r\n    ListItem: List;\r\n    addNewCard: Function;\r\n    onSaveCard: Function;\r\n}\r\n\r\ninterface IListItemStates {\r\n    openAddItemDailog: boolean\r\n}\r\n\r\nexport class ListItem extends React.Component<IListItemProps, IListItemStates> {\r\n\r\n    constructor(props: any) {\r\n        super(props)\r\n        this.state = { openAddItemDailog: false }\r\n\r\n    }\r\n\r\n    openDialog = () => {\r\n        this.setState({ openAddItemDailog: true })\r\n    }\r\n\r\n    closeDialog = () => {\r\n        this.setState({ openAddItemDailog: false })\r\n    }\r\n\r\n    addNewCard = (title: string) => {\r\n        this.props.addNewCard(this.props.ListItem.id, title)\r\n        this.closeDialog()\r\n    }\r\n\r\n    onSaveCard = (cardId: number, newDescription: string) => {\r\n        this.props.onSaveCard(this.props.ListItem.id, cardId, newDescription)\r\n    }\r\n\r\n\r\n    getList = () => {\r\n        return this.props.ListItem.cards.map(card =>\r\n            (<CardItemView cardItem={card} key={card.id} onSaveCard={this.onSaveCard} />))\r\n    }\r\n\r\n    render() {\r\n\r\n        let cardList = this.getList()\r\n\r\n        return (\r\n            <React.Fragment>\r\n                <Card style={styles.listItem}>\r\n                    <div style={styles.itemPB}>\r\n                        <span style={styles.listDescription}>{this.props.ListItem.description}</span>\r\n                    </div>\r\n                    <div>\r\n                        {cardList}\r\n                    </div>\r\n\r\n                    <Card style={styles.listAddItem} onClick={this.openDialog}>\r\n                        <CardActionArea style={styles.listAddButton}>\r\n                            <div className=\"layout-row layout-align-space-around-center\">\r\n                                <AddIcon />\r\n                                <span color=\"white\">Add New Card</span>\r\n                            </div>\r\n                        </CardActionArea>\r\n                    </Card>\r\n\r\n                    {this.state.openAddItemDailog &&\r\n                        <AddItem\r\n                            title=\"Card\"\r\n                            openDialog={this.state.openAddItemDailog}\r\n                            closeDialog={this.closeDialog}\r\n                            onAddItem={this.addNewCard}\r\n                        />}\r\n\r\n                </Card>\r\n\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ListItem;","import React from 'react';\r\nimport { Card, CardActionArea, Typography, IconButton } from '@material-ui/core';\r\nimport { List } from '../contract/contract';\r\nimport ListItem from './ListItem';\r\nimport { styles } from './Style';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport AddItem from './AddItem';\r\n\r\ninterface IListViewProps {\r\n    List: List[];\r\n    addNewCard: Function;\r\n    addNewList: Function;\r\n    onSaveCard: Function;\r\n}\r\n\r\ninterface IListViewStates {\r\n    openAddItemDailog: boolean\r\n}\r\n\r\n\r\nexport class ListView extends React.Component<IListViewProps, IListViewStates> {\r\n\r\n    constructor(props: any) {\r\n        super(props)\r\n        this.state = { openAddItemDailog: false }\r\n    }\r\n\r\n    openDialog = () => {\r\n        this.setState({ openAddItemDailog: true })\r\n    }\r\n\r\n    closeDialog = () => {\r\n        this.setState({ openAddItemDailog: false })\r\n    }\r\n\r\n    addNewList = (title: string) => {\r\n        this.props.addNewList(title)\r\n        this.closeDialog()\r\n    }\r\n\r\n    getListItems = () => {\r\n        return this.props.List.map(listItem =>\r\n            (<ListItem ListItem={listItem} key={listItem.id} addNewCard={this.props.addNewCard}\r\n                onSaveCard={this.props.onSaveCard} />))\r\n    }\r\n\r\n\r\n    render() {\r\n\r\n        let listItems = this.getListItems()\r\n        return (\r\n            <React.Fragment>\r\n                <div className=\"layout-row layout-align-center\" style={styles.itemPB}>\r\n                    {listItems}\r\n\r\n                    <Card style={styles.listAddListItem} onClick={this.openDialog}>\r\n                        <CardActionArea style={styles.listAddButton}>\r\n                            <div className=\"layout-row layout-align-space-around-center\">\r\n                                <AddIcon />\r\n                                <span color=\"white\">Add New List</span>\r\n                            </div>\r\n                        </CardActionArea>\r\n                    </Card>\r\n\r\n                    {this.state.openAddItemDailog &&\r\n                        <AddItem\r\n                            title=\"List\"\r\n                            openDialog={this.state.openAddItemDailog}\r\n                            closeDialog={this.closeDialog}\r\n                            onAddItem={this.addNewList}\r\n                        />}\r\n                </div>\r\n            </React.Fragment>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ListView;","import React from 'react';\r\nimport { ToDoWork, List, CardItem } from '../contract/contract';\r\nimport Background from '../images/background.jpg';\r\nimport ListView from './ListView';\r\n\r\n\r\nexport interface IHomeProps {\r\n}\r\n\r\nexport interface IHomeState {\r\n    todoWork: ToDoWork;\r\n    toggle: boolean;\r\n}\r\n\r\nfunction getHomeStyle() {\r\n    return {\r\n        minHeight: \"100%\",\r\n        minWidth: `100%`,\r\n        width: `100%`,\r\n        overflow: `auto`,\r\n        backgroundColor: `#EEEEEE`,\r\n        backgroundImage: `url(${Background})`,\r\n        position: \"fixed\" as \"fixed\",\r\n        top: 0,\r\n        left: 0,\r\n    }\r\n}\r\n\r\nexport class Home extends React.Component<IHomeProps, IHomeState> {\r\n    constructor(props: any) {\r\n        super(props);\r\n\r\n        let toDoWorkData = require('../contract/toDoData.json')\r\n        this.state = { todoWork: toDoWorkData, toggle: true };\r\n\r\n    }\r\n\r\n    addNewCard = (listId: number, cardTitle: string) => {\r\n        console.log(listId, cardTitle)\r\n        let listItems = this.state.todoWork.list\r\n        console.log(listItems)\r\n        let listItemIndex = listItems.findIndex(item => item.id == listId)        \r\n        let cardList = listItems[listItemIndex].cards\r\n        console.log(cardList)\r\n        const NoOfCards = cardList.length\r\n        let cardItem: CardItem = {\r\n            id: NoOfCards+1,\r\n            description: cardTitle\r\n        }\r\n        console.log(cardItem)\r\n        cardList.push(cardItem)\r\n        listItems[listItemIndex].cards = cardList\r\n\r\n        this.setState({ todoWork : {...this.state.todoWork, list : listItems}, toggle: !this.state.toggle})\r\n    }\r\n\r\n    addNewList = (listTitle: string) => {\r\n        let listItems = this.state.todoWork.list\r\n        const NoOfList = listItems.length\r\n        let newListItem: List = {\r\n            id: NoOfList+1,\r\n            description: listTitle,\r\n            cards: []\r\n        }\r\n        listItems.push(newListItem)\r\n\r\n        this.setState({ todoWork : {...this.state.todoWork, list : listItems}, toggle: !this.state.toggle})\r\n    }\r\n\r\n    onSaveCard =(listId: number, cardId: number, newDesription: string) =>{\r\n        let listItems = this.state.todoWork.list\r\n        let listItemIndex = listItems.findIndex(item => item.id == listId)\r\n        let cardList = listItems[listItemIndex].cards\r\n        let cardItemIndex = cardList.findIndex(item => item.id == cardId)\r\n\r\n        listItems[listItemIndex].cards[cardItemIndex].description = newDesription\r\n        this.setState({ todoWork : {...this.state.todoWork, list : listItems}, toggle: !this.state.toggle})\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                <div className=\"layout-row\" style={getHomeStyle()}>\r\n                    <ListView\r\n                        List={this.state.todoWork.list}\r\n                        addNewCard={this.addNewCard}\r\n                        addNewList={this.addNewList}\r\n                        onSaveCard={this.onSaveCard}\r\n                    />\r\n                </div>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n\r\n}\r\n\r\nexport default Home;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Home from './component/Home';\n\nReactDOM.render(<Home />, document.getElementById('root'));\n"],"sourceRoot":""}